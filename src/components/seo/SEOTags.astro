---
import { SEO } from "astro-seo";
import { SITE_URL } from "@/data/config";
import type { HeadTags } from "@/utils/types/HeadTags";

type Props = HeadTags;

const { title, description, noindex, og } = Astro.props;

const DEFAULT_TITLE_PAGE = "Jonathan - Portfolio";
const DEFAULT_DESCRIPTION_PAGE =
  "I'm Jonathan Ródenas López, and I work as DevOps Cloud Engineer. I spend most of time learning about how to make devs lifes easier and cloud architecture";
const DEFAULT_URL_SITE = SITE_URL;

const openGraph = {
  title: title || og?.title || DEFAULT_TITLE_PAGE,
  type: og?.type || "website",
  image: og?.image || "/opengraph-image.jpg",
  alt: og?.alt || "Jonathan portfolio image",
  url: DEFAULT_URL_SITE,
  description: og?.description || DEFAULT_DESCRIPTION_PAGE,
};
---

<head>
  <SEO
    charset="UTF-8"
    title={title || DEFAULT_TITLE_PAGE}
    description={description || DEFAULT_DESCRIPTION_PAGE}
    noindex={noindex || false}
    openGraph={{
      basic: {
        title: openGraph.title,
        type: openGraph.type,
        image: openGraph.image,
      },
      image: {
        alt: openGraph.alt,
      },
    }}
    twitter={{
      creator: "@Baronhez1",
    }}
    extend={{
      link: [
        { rel: "icon", href: "/favicon.svg" },
        { rel: "sitemap", href: "/sitemap-index.xml" },
      ],
      meta: [
        { name: "viewport", content: "width=device-width, initial-scale=1" },
        { name: "generator", content: Astro.generator },
        {
          name: "twitter:image",
          content: openGraph.image,
        },
        { name: "twitter:card", content: "summary_large_image" },
        { name: "twitter:title", content: openGraph.title },
        { name: "twitter:description", content: openGraph.description },
        { name: "twitter:site", content: "@Baronhez1" },
      ],
    }}
  />
  <!-- Theme manager -->
  <script is:inline>
    if (localStorage.getItem("theme") === null) {
      document.documentElement.setAttribute("data-theme", "black");
    } else
      document.documentElement.setAttribute(
        "data-theme",
        localStorage.getItem("theme"),
      );
    // "theme" LocalStorage value is set by the package to remember user preference.
    // The value is checked and applyed before rendering anything.
  </script>
  <script>
    import { themeChange } from "theme-change";
    themeChange();
  </script>
</head>
